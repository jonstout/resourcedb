=head1 GRNOC::NetSage::ResourceDB::DataService::Util

=head1 SYNOPSIS

  my $util = GRNOC::NetSage::ResourceDB::DataService::Util->new(
    username => 'guest',
    password => 'guest',
    host => '127.0.0.1',
    port => 1234,
    schema => '/etc/grnoc/resourcedb/database.sql'
  )

  my ($version, $err) = $util->install_database($path);
  if (defined $err) {
    warn "An error occurred while setting up database: $err";
  }

  print "Database schema version $version is installed.";

=head1 DESCRIPTION

This package contains utilities for the maintenance of this project's
database.

=head1 CONSTRUCTOR

=over 4

=item new ( OPTIONS )

=over 4

=item username <STRING> [required]

ResourceDB database user's name.

=item password <STRING> [required]

ResourceDB database user's password.

=item host <STRING> [required]

Database IP address.

=item port <INTEGER> [required]

Database TCP port number.

=item schema <STRING> [required]

Path to the database schema.

=back

=back

=head1 METHODS

=over 4

=item install_database ( )

Installs the lastest version of the database schema if not already
installed. Upgrades older database schemas. Returns the running
version number and error if a failure occurs.

    my ($version, $err) = $util->install_database();
    if (defined $err) {
        warn "Failure occurred: $err";
    }

=item update_schema ( $dbHandle, $dbExists )

update_schema gets the current version number from the database and
runs a series of upgrade methods. Each upgrade method returns the
running version number, and an error string if a failure
occurred. When an upgrade method succeeds it must return the new
version number; This allows the database to be fully upgraded with a
single invocation of the resourcedb-update-db script. Takes a database
handle and 1 if the resourcedb database already exists.

=back
